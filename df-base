ARG VERSION=latest
FROM registry.access.redhat.com/ubi8/ubi-minimal:$VERSION AS base
MAINTAINER Arjen P. de Vries <arjen@cs.ru.nl>
ARG VERSION

LABEL name="base"
LABEL vendor="Radboud University"
LABEL maintainer="Arjen P. de Vries <arjen@cs.ru.nl>"
LABEL version=$VERSION
LABEL summary="RU Big Data Course."
LABEL description="An image used for assignments in the Radboud University Big Data course's Lab Sessions."

COPY licenses /licenses

## Setup
#
ENV PASS="rubigdata2021"

# Versions to install:
ENV HADOOP_VER="3.2.2"
ENV SPARK_VER="3.0.2"
ENV SPARK_BIN_VER="3.0.2-bin-without-hadoop"
ENV Z_VERSION="0.9.0"

# Mirror site to use for apache packages:
ENV APACHE_MIRROR="https://ftp.nluug.nl/internet/apache/"

## Environment variables to act like "aliases"
#
ENV microdnf="microdnf --disableplugin=subscription-manager"
ENV wget="wget --quiet --show-progress --progress=bar:force"

USER root:root

RUN $microdnf update \
 && $microdnf install -y \
      curl \
      diffutils \
      glibc-langpack-en \
      gzip \
      hostname \
      man \
      nc \
      passwd \
      procps \
      shadow-utils \
      sudo \
      tar \
      util-linux \
      vim \
      wget \
      which \
 && echo $PASS | passwd --stdin root \
 && $microdnf clean all \
 && rm -rf /var/cache/yum

## OpenJDK
#
RUN $microdnf install \
      java-1.8.0-openjdk-devel \
      openssl curl ca-certificates \
 && echo "securerandom.source=file:/dev/urandom" >> /usr/lib/jvm/jre/lib/security/java.security \
 && $microdnf clean all \
 && rm -rf /var/cache/yum

LABEL JAVA_VERSION=1.8

ENV JAVA_HOME=/etc/alternatives/jre
ENV JAVA_OPTS="-XX:+UnlockExperimentalVMOptions"\
"-XX:+UseCGroupMemoryLimitForHeap"\
"-XX:MaxRAMFraction=2"\
"-XshowSettings:vm"

ENV PATH=$PATH:$JAVA_HOME/bin

## Python
#
# TODO: Assignment 5 stream.py uses numpy...
#       Is that really necessary?!
#
RUN $microdnf install -y \
      python38 \
      python38-numpy 

